plugins {
    id 'java'
    id 'idea'

    id 'io.codearte.nexus-staging' version '0.30.0'
    id 'maven-publish'
    id 'signing'

    id 'pl.allegro.tech.build.axion-release' version '1.13.1'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'tk.booky'
version scmVersion.version

repositories {
    gradlePluginPortal()
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    implementation 'net.dv8tion:JDA:4.2.0_229'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.google.code.gson:gson:2.8.6'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    Properties localProperties = new Properties()
    localProperties.load(new FileInputStream(localPropertiesFile))

    localProperties.each { name, value ->
        ext[name.toString()] = value
    }
} else {
    ext['signing.keyId'] = System.getenv('SIGNING_KEY_ID')
    ext['signing.password'] = System.getenv('SIGNING_PASSWORD')
    ext['signing.secretKeyRingFile'] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext['ossrhUsername'] = System.getenv('OSSRH_USERNAME')
    ext['ossrhPassword'] = System.getenv('OSSRH_PASSWORD')
    ext['sonatypeStagingProfileId'] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

publishing {
    publications {
        release(MavenPublication) {
            artifactId = 'jdabothelper'

            artifact jar { classifier '' }
            artifact shadowJar { classifier 'all' }
            artifact sourcesJar { classifier 'sources' }
            artifact javadocJar { classifier 'javadoc' }

            pom {
                name = 'jdabothelper'
                description = 'A helper library for the discord jda.'
                url = 'https://github.com/booky10/JDABotHelper/'

                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/booky10/JDABotHelper/blob/master/LICENSE'
                    }
                }

                developers {
                    developer { id = 'booky10' }
                }

                scm {
                    connection = 'scm:git:github.com/booky10/JDABotHelper.git'
                    developerConnection = 'scm:git:ssh://github.com/booky10/JDABotHelper.git'
                    url = 'https://github.com/booky10/JDABotHelper/tree/master'
                }

                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

nexusStaging {
    packageGroup = 'tk.booky'
    stagingProfileId = sonatypeStagingProfileId
    username = ossrhUsername
    password = ossrhPassword
}

signing {
    sign publishing.publications
}